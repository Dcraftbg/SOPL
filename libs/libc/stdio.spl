//TODO: introduce typing notations for all of these externals


extern "C" printf(*char, ... <Any> : int);
extern "C" scanf(*char, ... <ptr> : int);
extern "C" fprintf(ptr, *char, ... <Any> : int);
extern "C" fscanf(ptr, *char, ... <ptr> : int);
extern "C" sprintf(*char, *char, ... <Any> : int);
extern "C" sscanf(*char, *char, ... <ptr> : int);
extern "C" snprintf(*char, size_t, *char, ... <Any> : int);
//extern "C" vsnprintf(*char, size_t, *char, );
//extern "C" vsprintf;
//extern "C" vsscanf;
//extern "C" vfprintf;
//extern "C" vfscanf;
extern "C" tmpnam(*char);
extern "C" tmpfile();
extern "C" rename(*char, *char);
extern "C" remove(*char);
extern "C" fopen(*char, *char);
extern "C" fclose(ptr : int);
extern "C" fflush(ptr);
extern "C" setbuf(ptr, *char);
extern "C" setvbuf(ptr, *char, int, size_t);
extern "C" freopen(*char, *char, ptr);
extern "C" fgetc(ptr : int);
extern "C" fputc(int, ptr : int);
extern "C" fgets(*char, int, ptr : *char);
extern "C" fputs(*char, ptr);
extern "C" getc(ptr : int);
extern "C" gets(*char : *char);
extern "C" getchar(: int);
extern "C" putchar(int : int);
extern "C" putc(char, ptr: int);
extern "C" puts(*char : int);
extern "C" ungetc(int, ptr);
extern "C" fread(ptr, size_t, size_t, ptr : size_t);
extern "C" fwrite(ptr, long, long, ptr : size_t);
extern "C" rewind(ptr);
//extern "C" fgetpos(ptr, ); 
extern "C" fseek(ptr, long, int);
//extern "C" fsetpos(ptr, *char);
extern "C" ftell(ptr : long);
extern "C" ferror(ptr : int);
extern "C" feof(ptr);
extern "C" perror(*char);
extern "C" clearerr(ptr);


const SEEK_CUR = 1;
const SEEK_END = 2;
const SEEK_SET = 0;

const STDIN_FILENO = 0;
const STDOUT_FILENO = 1;
const STDERR_FILENO = 2;
const FILENAME_MAX = 260;
const FOPEN_MAX = 20;
const _SYS_OPEN = 20;
const TMP_MAX = 32767;
const NULL = 0;
const nullptr = cast<ptr>(NULL);
const EOF = -1;
extern "C" __acrt_iob_func(int : ptr);
//TODO:
//macro stdin  __acrt_iob_func(STDIN_FILENO) end
//macro stdout __acrt_iob_func(STDOUT_FILENO) end
//macro stderr __acrt_iob_func(STDERR_FILENO) end

// const _IOFBF = 0x0000;
// const _IOLBF = 0x0040;
// const _IONBF = 0x0004;



// const EOF = -1;
// const SEEK_CUR = 1;
// const SEEK_END = 2;
// const SEEK_SET = 0;
// const stdin  = 0;
// const stdout = 1;
// const stderr = 2;

// Make sure to add an issue with information on what constants you think should be added and proof of them existing in stdio.h
// TODO: Implement cif conditions to add Platform specific things. 
// cif CURRENT_SYS_WINDOWS {
//  ...    
// }
// cif CURRENT_SYS_LINUX {
//  ...    
// }
// [NOTE] Not all constants are able to be carried over! For those that aren't able to be carried over, you should be able to figure out depending on the OS
